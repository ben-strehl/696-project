namespace PocketPython
{
    public enum Opcode
    {
        /**************************/
        NO_OP,
        /**************************/
        POP_TOP,
        DUP_TOP,
        ROT_TWO,
        ROT_THREE,
        PRINT_EXPR,
        /**************************/
        LOAD_CONST,
        LOAD_NONE,
        LOAD_TRUE,
        LOAD_FALSE,
        LOAD_INTEGER,
        LOAD_ELLIPSIS,
        LOAD_FUNCTION,
        LOAD_NULL,
        /**************************/
        LOAD_FAST,
        LOAD_NAME,
        LOAD_NONLOCAL,
        LOAD_GLOBAL,
        LOAD_ATTR,
        LOAD_METHOD,
        LOAD_SUBSCR,

        STORE_FAST,
        STORE_NAME,
        STORE_GLOBAL,
        STORE_ATTR,
        STORE_SUBSCR,

        DELETE_FAST,
        DELETE_NAME,
        DELETE_GLOBAL,
        DELETE_ATTR,
        DELETE_SUBSCR,
        /**************************/
        BUILD_LONG,
        BUILD_TUPLE,
        BUILD_LIST,
        BUILD_DICT,
        BUILD_SET,
        BUILD_SLICE,
        BUILD_STRING,
        /**************************/
        BUILD_TUPLE_UNPACK,
        BUILD_LIST_UNPACK,
        BUILD_DICT_UNPACK,
        BUILD_SET_UNPACK,
        /**************************/
        BINARY_TRUEDIV,
        BINARY_POW,

        BINARY_ADD,
        BINARY_SUB,
        BINARY_MUL,
        BINARY_FLOORDIV,
        BINARY_MOD,

        COMPARE_LT,
        COMPARE_LE,
        COMPARE_EQ,
        COMPARE_NE,
        COMPARE_GT,
        COMPARE_GE,

        BITWISE_LSHIFT,
        BITWISE_RSHIFT,
        BITWISE_AND,
        BITWISE_OR,
        BITWISE_XOR,

        BINARY_MATMUL,

        IS_OP,
        CONTAINS_OP,
        /**************************/
        JUMP_ABSOLUTE,
        POP_JUMP_IF_FALSE,
        JUMP_IF_TRUE_OR_POP,
        JUMP_IF_FALSE_OR_POP,
        SHORTCUT_IF_FALSE_OR_POP,
        LOOP_CONTINUE,
        LOOP_BREAK,
        GOTO,
        /**************************/
        CALL,
        CALL_TP,
        RETURN_VALUE,
        YIELD_VALUE,
        /**************************/
        LIST_APPEND,
        DICT_ADD,
        SET_ADD,
        /**************************/
        UNARY_NEGATIVE,
        UNARY_NOT,
        UNARY_STAR,
        /**************************/
        GET_ITER,
        FOR_ITER,
        /**************************/
        IMPORT_NAME,
        IMPORT_NAME_REL,
        IMPORT_STAR,
        /**************************/
        UNPACK_SEQUENCE,
        UNPACK_EX,
        /**************************/
        BEGIN_CLASS,
        END_CLASS,
        STORE_CLASS_ATTR,
        /**************************/
        WITH_ENTER,
        WITH_EXIT,
        /**************************/
        ASSERT,
        EXCEPTION_MATCH,
        RAISE,
        RE_RAISE,
        POP_EXCEPTION,
        /**************************/
        SETUP_DOCSTRING,
        FORMAT_STRING,
        /**************************/
        INC_FAST,
        DEC_FAST,
        INC_GLOBAL,
        DEC_GLOBAL,
    }
}